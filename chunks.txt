import pickle
with open("data/vrd/train.pkl", 'rb') as f:
  train = pickle.load(f, encoding="latin1")

with open("data/vrd/test.pkl", 'rb') as f:
  test = pickle.load(f, encoding="latin1")

len(train)
len(test)


test[0].keys() # dict_keys(['img_path', 'boxes', 'classes', 'ix2', 'ix1', 'rel_classes'])
test[0]["img_path"] # '../data/sg_dataset/sg_test_images/3845770407_1a8cd41230_b.jpg'
test[0]["boxes"].shape # (10, 4)
test[0]["classes"].shape # (10,)
test[0]["ix2"].shape # (12,)
test[0]["ix1"].shape # (12,)
len(test[0]["rel_classes"]) # 12
len(test[0]["rel_classes"][0])


from lib.dataset import dataset

dataset_args = {"ds_name" : "vrd", "with_bg_obj" : False, "with_bg_pred" : False}

dataset = dataset("vrd", dataset_args)

test_imgrels = dataset.getRelst("test")

test_imgrels_list = [(k,v) for k,v in dataset.getRelst("test").items()]

if len(test_imgrels) != len(test):
  print("ERR!")

if len(test_imgrels_list) != len(test):
  print("ERR!")

print(test[0])
for i,imgrel in enumerate(test_imgrels_list):
  k, v = imgrel
  if "3845770407_1a8cd41230_b.jpg" in k:
    print(imgrel)
    break




import json
with open("data/vrd/datatest.json", 'rb') as f:
  data_old = json.load(f)

with open("data/vrd/data_relst_test.json", 'rb') as f:
  data_new = json.load(f)



import json
with open("data/vrd/datatrain.json", 'rb') as f:
  data_old = json.load(f)

with open("data/vrd/data_relst_train.json", 'rb') as f:
  data_new = json.load(f)


  import json
  with open("data/vrd/sg_dataset/sg_test_annotations.json", 'rb') as f:
    data = json.load(f)

  for i in data:
    if i["filename"] == "9055930159_9560984041_b.jpg":
      print(i['relationships'])

import pickle
with open("output/vgg16/vrd_test/faster_rcnn_10/proposal_faster_rcnn.pkl", 'rb') as f:
  propnew = pickle.load(f, encoding="latin1")

with open("data/vrd/eval/det_res.pkl", 'rb') as f:
  propold = pickle.load(f, encoding="latin1")

propnew.keys()
propold.keys()

len(propnew["confs"])
len(propold["confs"])

propnew["confs"][0][0]
propold["confs"][0][0]


ln -sf {../../interactionwise-azfar,../interactionwise-gio}/data/pretrained_model
ln -sf {../../interactionwise-azfar,../interactionwise-gio}/data/demo
ln -sf {../../interactionwise-azfar,../interactionwise-gio}/data/scripts
ln -sf {../../interactionwise-azfar,../interactionwise-gio}/data/vg
ln -sf {../../interactionwise-azfar,../interactionwise-gio}/data/word2vec_model
ln -sf {../../interactionwise-azfar,../interactionwise-gio}/data/VGG_imagenet.npy
ln -sf {../interactionwise-azfar,../interactionwise-gio}/other

ln -sf {../../../interactionwise-azfar,../interactionwise-gio}/data/genome/visual_genome_python_driver
ln -sf {../../../interactionwise-azfar,../interactionwise-gio}/data/genome/coco_splits
ln -sf {../../../interactionwise-azfar,../interactionwise-gio}/data/genome/xml/

ln -sf ../iwenv3 iwenv3
mkdir models
ln -sf ../interactionwise{-azfar,-gio}/

import pickle
with open("output/vgg16/vrd_test/faster_rcnn_10/proposal_faster_rcnn.pkl", 'rb') as f:
  propnew = pickle.load(f, encoding="latin1")

with open("data/vrd/eval/det_res.pkl", 'rb') as f:
  propold = pickle.load(f, encoding="latin1")

print("propnew\tpropold")
for i in range(max(len(propnew["boxes"][0]), len(propold["boxes"][0]))):
  print(i, end="\t")
  if i < len(propnew["boxes"][0]): print(propnew["boxes"][0][i], end="\t")
  if i < len(propnew["confs"][0]): print(propnew["confs"][0][i], end="\t")
  if i < len(propnew["cls"][0]):   print(propnew["cls"][0][i],   end="\t")
  if i < len(propold["boxes"][0]): print(propold["boxes"][0][i], end="\t")
  if i < len(propold["confs"][0]): print(propold["confs"][0][i], end="\t")
  if i < len(propold["cls"][0]):   print(propold["cls"][0][i],   end="\t")
  print()




class gen():
   def __init__(self):
     self.a = 2
   def __iter__(self):
    return self
   def __next__(self, i):
     if self.a == 4:
       return
     yield self.a*i
     yield self.a
     self.a += 1

a = gen()


for i,j in iter(a):
  print(i)
  print(j)

for i,j in a:
  print(i)
  print(j)

for i in a:
  print(i)

while True:
  i = next(a, 2)
  print(i)


while True:
  i = a.__next__(2)
  print(i)



import torch
with open("faster-rcnn/models/faster_rcnn_1_20_7559.pth", 'rb') as f:
  train = torch.load(f, encoding="latin1")
      print(i,x)

import torch
with open("models/epoch_4_checkpoint.pth.tar", 'rb') as f:
  train = torch.load(f, encoding="latin1")


# so prior

import pickle
with open("data/vrd/so_prior.pkl", 'rb') as f:
  so_prior = pickle.load(f, encoding="latin1")

with open("data/vrd/soP.pkl", 'rb') as f:
  sop = pickle.load(f, encoding="latin1")

for i in range(100):
  for j in range(100):
    print((i,j), ((so_prior[i][j] - sop[i][j] ) > 0.999))

# THERE IS A "bear" "wear" "ball" in their prior! why?
sop[89][88]
so_prior[89][88]
